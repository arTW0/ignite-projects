{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documentos/meu-projeto/ignite/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport const TransactionsProvider = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/arthur/Documentos/meu-projeto/ignite/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","transactions","setTransactions","get","then","response","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAWA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,MAAMK,oBAAoB,GAAG,MAAM;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,GAAG,CAACK,GAAJ,CAAQ,eAAR,EACEC,IADF,CACOC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADlC;AAEA,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACC,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEA;AAArC;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAbM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState } from \"react\"\nimport { api } from \"./services/api\"\n\ninterface Transaction {\n\tid: number;\n\ttitle: string;\n\ttype: 'deposit' | 'withdraw';\n\tamount: number;\n\tcategory: string;\n\tcreatedAt: string;\n}\n\nexport const TransactionsContext = createContext<Transaction[]>([])\n\nexport const TransactionsProvider = () => {\n\tconst [transactions, setTransactions] = useState<Transaction[]>([])\n\n\tuseEffect(() => {\n\t\tapi.get('/transactions')\n\t\t\t.then(response => setTransactions(response.data.transactions))\n\t}, [])\n\n\treturn (\n\t\t<TransactionsContext.Provider value={transactions}> \n    \n\t\t</TransactionsContext.Provider>\n\t)\n}"]},"metadata":{},"sourceType":"module"}